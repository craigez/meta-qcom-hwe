#Copyright (c) 2023 Qualcomm Innovation Center, Inc. All rights reserved.
#SPDX-License-Identifier: BSD-3-Clause-Clear
policy_module(qcm6490_test, 1.0.0)

#TODO: following are added to unblock the tech team
#      and expected to clean this going fwd.

gen_require(`
	type systemd_passwd_agent_t;
	type dnsmasq_t;
	type systemd_logind_t;
	type systemd_resolved_t;
	type systemd_analyze_t;
	type default_t;
	type initrc_t;
	type unconfined_t;
    ')


#TODO :
#   need to remove this post fixing
#   denials
permissive systemd_passwd_agent_t;
permissive dnsmasq_t;
permissive systemd_logind_t;
permissive systemd_resolved_t;

# Systemd_analyze will read each services
# system_units and status much of privilege
# Needed for the  systemd-plot.svg
kernel_search_proc(systemd_analyze_t)
kernel_read_sysctl(systemd_analyze_t)
files_getattr_var_lib_dirs(systemd_analyze_t)
init_search_runtime(systemd_analyze_t)
files_manage_urandom_seed(systemd_analyze_t)
permissive systemd_analyze_t;

#=========================
#for kernel test folder 
#  used or kernel tests which will have scripts
#  with /proc read , insmode and too many priveliged operations
type qcom_kernel_tests_t;
type qcom_kernel_tests_exec_t;
type qcom_modules_object_t;

corecmd_search_bin(qcom_kernel_tests_t)
corecmd_check_exec_shell(qcom_kernel_tests_t)
application_domain(qcom_kernel_tests_t,qcom_kernel_tests_exec_t)
init_daemon_domain(qcom_kernel_tests_t,  qcom_kernel_tests_exec_t)
domtrans_pattern(unconfined_t, qcom_kernel_tests_exec_t, qcom_kernel_tests_t)
domtrans_pattern(initrc_t, qcom_kernel_tests_exec_t, qcom_kernel_tests_t)
permissive  qcom_kernel_tests_t;

#======================
# for halnativetest 
#
type qcom_nativehaltest_t;
type qcom_nativehaltest_exec_t;
application_domain(qcom_nativehaltest_t, qcom_nativehaltest_exec_t)
init_daemon_domain(qcom_nativehaltest_t, qcom_nativehaltest_exec_t)
domtrans_pattern(unconfined_t, qcom_nativehaltest_exec_t, qcom_nativehaltest_t)
domtrans_pattern(initrc_t, qcom_nativehaltest_exec_t, qcom_nativehaltest_t)
can_exec(initrc_t, qcom_nativehaltest_t)
permissive  qcom_nativehaltest_t;

#ssgtzd_unite test
qcom_allow_ssgtzd_sock_write(initrc_t);
