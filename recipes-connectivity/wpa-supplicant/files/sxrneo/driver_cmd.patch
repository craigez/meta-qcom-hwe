diff --git a/src/drivers/driver.h b/src/drivers/driver.h
index f2b632b..b86cedb 100644
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -3796,7 +3796,7 @@ struct wpa_driver_ops {
 	 */
 	int (*set_authmode)(void *priv, int authmode);
 
-#ifdef ANDROID
+#if defined(ANDROID) || defined (LINUX_EMBEDDED)
 	/**
 	 * driver_cmd - Execute driver-specific command
 	 * @priv: Private driver interface data
@@ -3806,7 +3806,7 @@ struct wpa_driver_ops {
 	 * Returns: 0 on success, -1 on failure
 	 */
 	int (*driver_cmd)(void *priv, char *cmd, char *buf, size_t buf_len);
-#endif /* ANDROID */
+#endif /* ANDROID || LINUX_EMBEDDED */
 
 	/**
 	 * vendor_cmd - Execute vendor specific command
diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index 005ce0c..7dad5fd 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -9231,11 +9231,11 @@ static int nl80211_set_p2p_powersave(void *priv, int legacy_ps, int opp_ps,
 		   "opp_ps=%d ctwindow=%d)", legacy_ps, opp_ps, ctwindow);
 
 	if (opp_ps != -1 || ctwindow != -1) {
-#ifdef ANDROID_P2P
+#if defined(ANDROID_P2P) || defined(LINUX_EMBEDDED)
 		wpa_driver_set_p2p_ps(priv, legacy_ps, opp_ps, ctwindow);
 #else /* ANDROID_P2P */
 		return -1; /* Not yet supported */
-#endif /* ANDROID_P2P */
+#endif /* ANDROID_P2P || LINUX_EMBEDDED */
 	}
 
 	if (legacy_ps == -1)
@@ -12177,16 +12177,16 @@ const struct wpa_driver_ops wpa_driver_nl80211_ops = {
 	.get_survey = wpa_driver_nl80211_get_survey,
 	.status = wpa_driver_nl80211_status,
 	.switch_channel = nl80211_switch_channel,
-#ifdef ANDROID_P2P
+#if defined(ANDROID_P2P) || defined(LINUX_EMBEDDED)
 	.set_noa = wpa_driver_set_p2p_noa,
 	.get_noa = wpa_driver_get_p2p_noa,
 	.set_ap_wps_ie = wpa_driver_set_ap_wps_p2p_ie,
-#endif /* ANDROID_P2P */
-#ifdef ANDROID
+#endif /* ANDROID_P2P || LINUX_EMBEDDED */
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
 #ifndef ANDROID_LIB_STUB
 	.driver_cmd = wpa_driver_nl80211_driver_cmd,
 #endif /* !ANDROID_LIB_STUB */
-#endif /* ANDROID */
+#endif /* ANDROID || LINUX_EMBEDDED */
 	.vendor_cmd = nl80211_vendor_cmd,
 	.set_qos_map = nl80211_set_qos_map,
 	.get_wowlan = nl80211_get_wowlan,
diff --git a/src/drivers/driver_nl80211.h b/src/drivers/driver_nl80211.h
index 32bef35..f668f65 100644
--- a/src/drivers/driver_nl80211.h
+++ b/src/drivers/driver_nl80211.h
@@ -300,11 +300,7 @@ const char * nl80211_iftype_str(enum nl80211_iftype mode);
 
 void nl80211_restore_ap_mode(struct i802_bss *bss);
 
-#ifdef ANDROID
-int android_nl_socket_set_nonblocking(struct nl_sock *handle);
-int android_pno_start(struct i802_bss *bss,
-		      struct wpa_driver_scan_params *params);
-int android_pno_stop(struct i802_bss *bss);
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
 extern int wpa_driver_nl80211_driver_cmd(void *priv, char *cmd, char *buf,
 					 size_t buf_len);
 extern int wpa_driver_nl80211_driver_event(struct wpa_driver_nl80211_data *drv,
@@ -312,15 +308,15 @@ extern int wpa_driver_nl80211_driver_event(struct wpa_driver_nl80211_data *drv,
 					   u8 *data, size_t len);
 
 
-#ifdef ANDROID_P2P
+#if defined(ANDROID_P2P) || defined(LINUX_EMBEDDED)
 int wpa_driver_set_p2p_noa(void *priv, u8 count, int start, int duration);
 int wpa_driver_get_p2p_noa(void *priv, u8 *buf, size_t len);
 int wpa_driver_set_p2p_ps(void *priv, int legacy_ps, int opp_ps, int ctwindow);
 int wpa_driver_set_ap_wps_p2p_ie(void *priv, const struct wpabuf *beacon,
 				 const struct wpabuf *proberesp,
 				 const struct wpabuf *assocresp);
-#endif /* ANDROID_P2P */
-#endif /* ANDROID */
+#endif /* ANDROID_P2P || LINUX_EMBEDDED */
+#endif /* ANDROID || LINUX_EMBEDDED */
 
 
 /* driver_nl80211_scan.c */
diff --git a/src/drivers/driver_nl80211_event.c b/src/drivers/driver_nl80211_event.c
index c9791c3..f9a5066 100644
--- a/src/drivers/driver_nl80211_event.c
+++ b/src/drivers/driver_nl80211_event.c
@@ -2549,8 +2549,8 @@ static void nl80211_vendor_event(struct wpa_driver_nl80211_data *drv,
 		return;
 	}
 
-#ifdef ANDROID
-#ifdef ANDROID_LIB_EVENT
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
+#if defined(ANDROID_LIB_EVENT) || defined(LINUX_EMBEDDED_LIB_EVENT)
        wpa_driver_nl80211_driver_event(drv, vendor_id, subcmd, data, len);
 #endif /* ANDROID_LIB_EVENT */
 #endif /* ANDROID */
diff --git a/wpa_supplicant/Android.mk b/wpa_supplicant/Android.mk
index 91c3cba..a9d169f 100644
--- a/wpa_supplicant/Android.mk
+++ b/wpa_supplicant/Android.mk
@@ -1573,6 +1573,14 @@ ifdef CONFIG_ANDROID_LOG
 L_CFLAGS += -DCONFIG_ANDROID_LOG
 endif
 
+ifdef CONFIG_LINUX_EMBEDDED
+L_CFLAGS += -DLINUX_EMBEDDED
+endif
+
+ifdef CONFIG_LINUX_EMBEDDED_LIB_EVENT
+L_CFLAGS += -DLINUX_EMBEDDED_LIB_EVENT
+endif
+
 ifdef CONFIG_IPV6
 # for eapol_test only
 L_CFLAGS += -DCONFIG_IPV6
diff --git a/wpa_supplicant/Makefile b/wpa_supplicant/Makefile
index 92e0744..86bb151 100644
--- a/wpa_supplicant/Makefile
+++ b/wpa_supplicant/Makefile
@@ -175,6 +175,14 @@ LIBS_c += -lgcov
 LIBS_p += -lgcov
 endif
 
+ifdef CONFIG_LINUX_EMBEDDED
+CFLAGS += -DLINUX_EMBEDDED
+endif
+
+ifdef CONFIG_LINUX_EMBEDDED_LIB_EVENT
+CFLAGS += -DLINUX_EMBEDDED_LIB_EVENT
+endif
+
 ifdef CONFIG_HT_OVERRIDES
 CFLAGS += -DCONFIG_HT_OVERRIDES
 endif
@@ -1853,6 +1861,10 @@ EXTRALIBS += WbemUuid.Lib
 endif
 endif
 
+ifdef CONFIG_LINUX_EMBEDDED
+EXTRALIBS += -lwpa_supplicant_8_lib
+endif
+
 ifdef CONFIG_FST
 CFLAGS += -DCONFIG_FST
 ifdef CONFIG_FST_TEST
diff --git a/wpa_supplicant/android.config b/wpa_supplicant/android.config
index 168b72c..8cea0f0 100644
--- a/wpa_supplicant/android.config
+++ b/wpa_supplicant/android.config
@@ -379,6 +379,9 @@ CONFIG_IEEE80211R=y
 # output
 CONFIG_ANDROID_LOG=y
 
+# LE platform build with wpa_cli "driver" command
+#CONFIG_LINUX_EMBEDDED=y
+
 # Enable privilege separation (see README 'Privilege separation' for details)
 #CONFIG_PRIVSEP=y
 
diff --git a/wpa_supplicant/ctrl_iface.c b/wpa_supplicant/ctrl_iface.c
index 0fac389..5ae9d9b 100644
--- a/wpa_supplicant/ctrl_iface.c
+++ b/wpa_supplicant/ctrl_iface.c
@@ -8260,7 +8260,7 @@ static int wpa_supplicant_pktcnt_poll(struct wpa_supplicant *wpa_s, char *buf,
 }
 
 
-#ifdef ANDROID
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
 static int wpa_supplicant_driver_cmd(struct wpa_supplicant *wpa_s, char *cmd,
 				     char *buf, size_t buflen)
 {
@@ -8284,7 +8284,7 @@ static int wpa_supplicant_driver_cmd(struct wpa_supplicant *wpa_s, char *cmd,
 	}
 	return ret;
 }
-#endif /* ANDROID */
+#endif /* ANDROID || LINUX_EMBEDDED */
 
 
 static int wpa_supplicant_vendor_cmd(struct wpa_supplicant *wpa_s, char *cmd,
@@ -11197,11 +11197,11 @@ char * wpa_supplicant_ctrl_iface_process(struct wpa_supplicant *wpa_s,
 	} else if (os_strcmp(buf, "DRIVER_FLAGS2") == 0) {
 		reply_len = wpas_ctrl_iface_driver_flags2(wpa_s, reply,
 							  reply_size);
-#ifdef ANDROID
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
 	} else if (os_strncmp(buf, "DRIVER ", 7) == 0) {
 		reply_len = wpa_supplicant_driver_cmd(wpa_s, buf + 7, reply,
 						      reply_size);
-#endif /* ANDROID */
+#endif /* ANDROID || LINUX_EMBEDDED */
 	} else if (os_strncmp(buf, "VENDOR ", 7) == 0) {
 		reply_len = wpa_supplicant_vendor_cmd(wpa_s, buf + 7, reply,
 						      reply_size);
@@ -11775,9 +11775,9 @@ static char * wpas_global_ctrl_iface_redir_p2p(struct wpa_global *global,
 		NULL
 	};
 	static const char * prefix[] = {
-#ifdef ANDROID
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
 		"DRIVER ",
-#endif /* ANDROID */
+#endif /* ANDROID || LINUX_EMBEDDED */
 		"GET_CAPABILITY ",
 		"GET_NETWORK ",
 		"REMOVE_NETWORK ",
diff --git a/wpa_supplicant/driver_i.h b/wpa_supplicant/driver_i.h
index 237f4e0..30f5f7d 100644
--- a/wpa_supplicant/driver_i.h
+++ b/wpa_supplicant/driver_i.h
@@ -599,7 +599,7 @@ static inline int wpa_drv_tdls_oper(struct wpa_supplicant *wpa_s,
 	return wpa_s->driver->tdls_oper(wpa_s->drv_priv, oper, peer);
 }
 
-#ifdef ANDROID
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
 static inline int wpa_drv_driver_cmd(struct wpa_supplicant *wpa_s,
 				     char *cmd, char *buf, size_t buf_len)
 {
@@ -607,7 +607,7 @@ static inline int wpa_drv_driver_cmd(struct wpa_supplicant *wpa_s,
 		return -1;
 	return wpa_s->driver->driver_cmd(wpa_s->drv_priv, cmd, buf, buf_len);
 }
-#endif /* ANDROID */
+#endif /* ANDROID || LINUX_EMBEDDED */
 
 static inline void wpa_drv_set_rekey_info(struct wpa_supplicant *wpa_s,
 					  const u8 *kek, size_t kek_len,
diff --git a/wpa_supplicant/wpa_cli.c b/wpa_supplicant/wpa_cli.c
index b98a833..654eab0 100644
--- a/wpa_supplicant/wpa_cli.c
+++ b/wpa_supplicant/wpa_cli.c
@@ -2893,12 +2893,12 @@ static int wpa_cli_cmd_raw(struct wpa_ctrl *ctrl, int argc, char *argv[])
 }
 
 
-#ifdef ANDROID
+#if defined(ANDROID) || defined(LINUX_EMBEDDED)
 static int wpa_cli_cmd_driver(struct wpa_ctrl *ctrl, int argc, char *argv[])
 {
 	return wpa_cli_cmd(ctrl, "DRIVER", 1, argc, argv);
 }
-#endif /* ANDROID */
+#endif /* ANDROID || LINUX_EMBEDDED */
 
 
 static int wpa_cli_cmd_vendor(struct wpa_ctrl *ctrl, int argc, char *argv[])
@@ -3792,10 +3792,10 @@ static const struct wpa_cli_cmd wpa_cli_commands[] = {
 	  "<params..> = Sent unprocessed command" },
 	{ "flush", wpa_cli_cmd_flush, NULL, cli_cmd_flag_none,
 	  "= flush wpa_supplicant state" },
-#ifdef ANDROID
+#if defined (ANDROID) || defined (LINUX_EMBEDDED)
 	{ "driver", wpa_cli_cmd_driver, NULL, cli_cmd_flag_none,
 	  "<command> = driver private commands" },
-#endif /* ANDROID */
+#endif /* ANDROID || LINUX_EMBEDDED */
 	{ "radio_work", wpa_cli_cmd_radio_work, NULL, cli_cmd_flag_none,
 	  "= radio_work <show/add/done>" },
 	{ "vendor", wpa_cli_cmd_vendor, NULL, cli_cmd_flag_none,
